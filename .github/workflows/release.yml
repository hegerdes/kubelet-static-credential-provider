name: Release with GoReleaser

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write
  attestations: write
  packages: write
  security-events: write

env:
  GO_VERSION: "1.24"

jobs:
  Release:
    name: Run GoReleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        continue-on-error: true
        with:
          subject-path: |
            dist/static-credential-provider_darwin_amd64_v1/*
            dist/static-credential-provider_darwin_arm64/*
            dist/static-credential-provider_linux_amd64_v1/*
            dist/static-credential-provider_linux_arm64/*
            dist/static-credential-provider_linux_ppc64le/*
            dist/static-credential-provider_linux_s390x/*
            dist/static-credential-provider_windows_amd64_v1/*
            dist/static-credential-provider_windows_arm64/*

  Push-Image:
    uses: hegerdes/helper-suite/.github/workflows/reusable-docker-build.yml@main
    with:
      build-name: ${{ github.repository_owner }}/kubelet-static-credential-provider,ghcr.io/${{ github.repository_owner }}/kubelet-static-credential-provider
      build-tags: |
        ${{ github.ref_name }}
        latest
      build-labels: MAINTAINER=${{ github.repository_owner }}
      build-platforms: linux/amd64,linux/arm64,linux/s390x
      # build-args: BUILD_VERSION=${{ github.env.GO_VERSION }}-bookworm
    secrets:
      REGISTRY_USER: ${{ secrets.DOCKERHUB_USERNAME }}
      REGISTRY_PW: ${{ secrets.DOCKERHUB_TOKEN }}
